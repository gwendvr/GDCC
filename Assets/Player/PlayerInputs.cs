//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Player/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""MainActions"",
            ""id"": ""dcaca6d6-6649-40f3-a354-eb74f4747073"",
            ""actions"": [
                {
                    ""name"": ""MoveCamUpDown"",
                    ""type"": ""Value"",
                    ""id"": ""4d83e3c8-a0a9-4892-bdce-c81fc5723202"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveCamLeftRight"",
                    ""type"": ""Value"",
                    ""id"": ""732706ca-a668-4ee4-92be-4e760433e400"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PhotoMode"",
                    ""type"": ""Button"",
                    ""id"": ""0f0485e0-3753-46a6-87ff-8a6f18356f3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ulti"",
                    ""type"": ""Button"",
                    ""id"": ""7e503c51-d0c5-49a0-8d0e-71cea2ebcc95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddUltiProgression"",
                    ""type"": ""Button"",
                    ""id"": ""02e54a86-36f5-47c9-b416-5c8592fa426f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""85b45d66-47e4-4a88-a120-7e3ef8b6faf9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""411f7650-3661-4615-b25c-833c117beac1"",
                    ""path"": ""<Mouse>/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""839db2d5-29e2-4102-ad1d-58a44ce8e4ff"",
                    ""path"": ""<Mouse>/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""1a4ff79a-6074-48e5-9ffc-a1d587f77612"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamLeftRight"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c3593446-16b5-4189-9abd-4fd161b0f4b4"",
                    ""path"": ""<Mouse>/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cbb477b6-ab90-4927-910b-723cc48ff903"",
                    ""path"": ""<Mouse>/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamLeftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""71d3d88e-b3ee-4f6f-b413-2bf9fd67d09e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PhotoMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbd06a44-5ee5-4e0b-8ede-cd90109be8bd"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ulti"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f764d7aa-bac2-4667-bf12-f27fd40f3e3e"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AddUltiProgression"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MainActions
        m_MainActions = asset.FindActionMap("MainActions", throwIfNotFound: true);
        m_MainActions_MoveCamUpDown = m_MainActions.FindAction("MoveCamUpDown", throwIfNotFound: true);
        m_MainActions_MoveCamLeftRight = m_MainActions.FindAction("MoveCamLeftRight", throwIfNotFound: true);
        m_MainActions_PhotoMode = m_MainActions.FindAction("PhotoMode", throwIfNotFound: true);
        m_MainActions_Ulti = m_MainActions.FindAction("Ulti", throwIfNotFound: true);
        m_MainActions_AddUltiProgression = m_MainActions.FindAction("AddUltiProgression", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MainActions
    private readonly InputActionMap m_MainActions;
    private List<IMainActionsActions> m_MainActionsActionsCallbackInterfaces = new List<IMainActionsActions>();
    private readonly InputAction m_MainActions_MoveCamUpDown;
    private readonly InputAction m_MainActions_MoveCamLeftRight;
    private readonly InputAction m_MainActions_PhotoMode;
    private readonly InputAction m_MainActions_Ulti;
    private readonly InputAction m_MainActions_AddUltiProgression;
    public struct MainActionsActions
    {
        private @PlayerInputs m_Wrapper;
        public MainActionsActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveCamUpDown => m_Wrapper.m_MainActions_MoveCamUpDown;
        public InputAction @MoveCamLeftRight => m_Wrapper.m_MainActions_MoveCamLeftRight;
        public InputAction @PhotoMode => m_Wrapper.m_MainActions_PhotoMode;
        public InputAction @Ulti => m_Wrapper.m_MainActions_Ulti;
        public InputAction @AddUltiProgression => m_Wrapper.m_MainActions_AddUltiProgression;
        public InputActionMap Get() { return m_Wrapper.m_MainActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActionsActions set) { return set.Get(); }
        public void AddCallbacks(IMainActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_MainActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MainActionsActionsCallbackInterfaces.Add(instance);
            @MoveCamUpDown.started += instance.OnMoveCamUpDown;
            @MoveCamUpDown.performed += instance.OnMoveCamUpDown;
            @MoveCamUpDown.canceled += instance.OnMoveCamUpDown;
            @MoveCamLeftRight.started += instance.OnMoveCamLeftRight;
            @MoveCamLeftRight.performed += instance.OnMoveCamLeftRight;
            @MoveCamLeftRight.canceled += instance.OnMoveCamLeftRight;
            @PhotoMode.started += instance.OnPhotoMode;
            @PhotoMode.performed += instance.OnPhotoMode;
            @PhotoMode.canceled += instance.OnPhotoMode;
            @Ulti.started += instance.OnUlti;
            @Ulti.performed += instance.OnUlti;
            @Ulti.canceled += instance.OnUlti;
            @AddUltiProgression.started += instance.OnAddUltiProgression;
            @AddUltiProgression.performed += instance.OnAddUltiProgression;
            @AddUltiProgression.canceled += instance.OnAddUltiProgression;
        }

        private void UnregisterCallbacks(IMainActionsActions instance)
        {
            @MoveCamUpDown.started -= instance.OnMoveCamUpDown;
            @MoveCamUpDown.performed -= instance.OnMoveCamUpDown;
            @MoveCamUpDown.canceled -= instance.OnMoveCamUpDown;
            @MoveCamLeftRight.started -= instance.OnMoveCamLeftRight;
            @MoveCamLeftRight.performed -= instance.OnMoveCamLeftRight;
            @MoveCamLeftRight.canceled -= instance.OnMoveCamLeftRight;
            @PhotoMode.started -= instance.OnPhotoMode;
            @PhotoMode.performed -= instance.OnPhotoMode;
            @PhotoMode.canceled -= instance.OnPhotoMode;
            @Ulti.started -= instance.OnUlti;
            @Ulti.performed -= instance.OnUlti;
            @Ulti.canceled -= instance.OnUlti;
            @AddUltiProgression.started -= instance.OnAddUltiProgression;
            @AddUltiProgression.performed -= instance.OnAddUltiProgression;
            @AddUltiProgression.canceled -= instance.OnAddUltiProgression;
        }

        public void RemoveCallbacks(IMainActionsActions instance)
        {
            if (m_Wrapper.m_MainActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMainActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_MainActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MainActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MainActionsActions @MainActions => new MainActionsActions(this);
    public interface IMainActionsActions
    {
        void OnMoveCamUpDown(InputAction.CallbackContext context);
        void OnMoveCamLeftRight(InputAction.CallbackContext context);
        void OnPhotoMode(InputAction.CallbackContext context);
        void OnUlti(InputAction.CallbackContext context);
        void OnAddUltiProgression(InputAction.CallbackContext context);
    }
}
